# Terraform block with required providers
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0" # Specify the version you want to use
    }
  }
}

# Provider configuration
provider "aws" {
  region = "us-west-2" # Change this to your desired AWS region
}

# Read the secret values from the local files and mark them as sensitive
locals {
  secret_value   = sensitive(file("mysupersecretvalue"))
  secret_value_1 = sensitive(file("mysupersecretvalue1"))
}


# Basic Secret Creation
resource "aws_secretsmanager_secret" "replicated_secret" {
  name = "replicated-secret"
}

resource "aws_secretsmanager_secret_version" "replicated_secret_version" {
  secret_id     = aws_secretsmanager_secret.replicated_secret.id
  secret_string = local.secret_value
}

# New Secret Creation
resource "aws_secretsmanager_secret" "replicated_secret_1" {
  name = "replicated-secret-1"
}

resource "aws_secretsmanager_secret_version" "replicated_secret_version_1" {
  secret_id     = aws_secretsmanager_secret.replicated_secret_1.id
  secret_string = local.secret_value_1
}

# Case 1: Multi-property secret with one property being the value of replicated_secret_version
# Other properties are plaintext values for demonstration (e.g., username, db_url)
resource "aws_secretsmanager_secret" "case_1_secret" {
  name = "case-1-secret"
}

resource "aws_secretsmanager_secret_version" "case_1_secret_version" {
  secret_id = aws_secretsmanager_secret.case_1_secret.id
  secret_string = jsonencode({
    secret_value = aws_secretsmanager_secret_version.replicated_secret_version.secret_string
    username     = "demo_user"
    db_url       = "demo.database.amazonaws.com"
  })
}

# Case 2: Multi-property secret with properties from both replicated secret values
# Additional plaintext properties included for demonstration
resource "aws_secretsmanager_secret" "case_2_secret" {
  name = "case-2-secret"
}

resource "aws_secretsmanager_secret_version" "case_2_secret_version" {
  secret_id = aws_secretsmanager_secret.case_2_secret.id
  secret_string = jsonencode({
    secret_value_1 = aws_secretsmanager_secret_version.replicated_secret_version.secret_string
    secret_value_2 = aws_secretsmanager_secret_version.replicated_secret_version_1.secret_string
    api_key        = "demo_api_key"
    environment    = "production"
  })
}

# Case 3: Single property secret with the value of the replicated secret version
resource "aws_secretsmanager_secret" "case_3_secret" {
  name = "case-3-secret"
}

resource "aws_secretsmanager_secret_version" "case_3_secret_version" {
  secret_id     = aws_secretsmanager_secret.case_3_secret.id
  secret_string = aws_secretsmanager_secret_version.replicated_secret_version.secret_string
}
